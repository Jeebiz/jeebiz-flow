################################################################################################################  
###Spring Boot 监控（安全、开放信息等）配置：  
################################################################################################################
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

################################################################################################################  
###内置应用容器（Tomcat、Jetty、Undertow）配置：  
################################################################################################################
server:
  compression:
    enabled: true
  port: 8090
  servlet:
    session:
      timeout: 60m
  undertow:
    # 访问日志配置
    accesslog:
      enabled: true
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
    buffer-size: 2048
    # 是否分配的直接内存(NIO直接分配的堆外内存)
    direct-buffers: true
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
    # 不要设置过大，如果过大，启动项目会报错：打开文件数过多
    io-threads: 16
    # 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
    # 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
    worker-threads: 256

################################################################################################################  
###接口文档（Swagger UI）配置：  
################################################################################################################
swagger:
  enabled: true
  authorization:
    key-name: X-Authorization
  title: 微服务开发平台 - 学生工作（管理功能）
  description: 该模块完成组织机构管理、角色用户管理、功能菜单按钮管理
  version: ${application.version:1.0.0-SNAPSHOT}
  contact:
    name: Jeebiz
    url: http://jeebiz.net
  base-package: net.jeebiz
  base-path:
    - /**
  exclude-path:
    - /error
    - /ops/**
  # 公共参数
  global-operation-parameters:
    - name: X-Authorization
      description: JWT鉴权
      modelRef: string
      parameterType: header
      # 公共参数写成requierd, 对于不需要登录的接口随便写一个字符串即可
      required: true
  # 通用返回错误码
  apply-default-response-messages: true

################################################################################################################  
###Spring Boot 相关组件（SpringMVC、Freemarker、Session、Cache、DataSource）配置：  
################################################################################################################
spring:
  # 应用信息配置
  application:
    name: jeebiz-cloud-filestore
  # 缓存配置：
  cache:
    type: ehcache
    ehcache:
      config: classpath:conf/ehcache/ehcache.xml
  # 数据源配置：
  datasource:
    name: jeebiz-cloud
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: oracle.jdbc.driver.OracleDriver
    url: jdbc:oracle:thin:@192.168.2.161:1521:orcl
    username: zh_cloud
    password: zh_cloud
    # Druid的数据源配置：
    druid:
      #配置这个属性的意义在于，如果存在多个数据源，监控的时候可以通过名字来区分开来。如果没有配置，将会生成一个名字，格式是：”DataSource-” + System.identityHashCode(this)
      #name: DataSource-Test
      #这一项可配可不配，如果不配置druid会根据url自动识别dbType，然后选择相应的driverClassName
      #driver-class-name: oracle.jdbc.driver.OracleDriver         
      #url: 
      #username: xxx
      #password: xxx 
      #initialSize: 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时；默认 15
      initial-size: 15
      #连接池最大连接数量 
      max-active: 50
      #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁
      max-wait: 60000
      #连接池最小连接数量；默认 5
      min-idle: 5
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒;有两个含义：1) Destroy线程会检测连接的间隔时间 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      time-between-eviction-runs-millis: 60000
      #配置一个连接在池中最小生存的时间，单位：毫秒
      min-evictable-idle-time-millis: 300000
      #超过时间限制是否回收
      remove-abandoned: true
      #超过时间限制多长，单位：毫秒 ，180000毫秒=3分钟
      remove-abandoned-timeout-millis: 180000
      #用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
      validation-query: SELECT 1 FROM DUAL
      #申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。建议配置为true，不影响性能，并且保证安全性。
      test-while-idle: true
      #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-return: false
      #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。5.5及以上版本有PSCache，建议开启。 
      pool-prepared-statements: true
      #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100 
      max-pool-prepared-statement-per-connection-size: 100
      #Druid的监控统计功能:属性类型是字符串，通过别名的方式配置扩展插件
      #filters: mergeStat,wall,slf4j
      # Druid监控配置
      aop-patterns:
        - net.jeebiz.cloud.authz.web.mvc
      stat-view-servlet:
        enabled: true
        reset-enable: false
      web-stat-filter:
        enabled: true
        session-stat-enable: true
        session-stat-max-count: 20000
      # Druid自定义过滤器参数
      filter:
        # 配置日志输出
        slf4j:
          enabled: true
          statement-create-after-log-enabled: false
          statement-close-after-log-enabled: false
          result-set-open-after-log-enabled: false
          result-set-close-after-log-enabled: false
        # 配置安全防护
        wall:
          # 对被认为是攻击的SQL进行LOG.error输出
          log-violation: true
          # 对被认为是攻击的SQL抛出SQLExcepton
          throw-exception: true
          config:
            # 是否允许语句中存在注释，Oracle的用户不用担心，Wall能够识别hints和注释的区别
            comment-allow: true
            # 是否允许非以上基本语句的其他语句，缺省关闭，通过这个选项就能够屏蔽DDL
            none-base-statement-allow: true
            # 是否允许一次执行多条语句，缺省关闭 
            multi-statement-allow: true
            # 解除union关键字检查
            select-union-check: false
            # 是否允许执行锁定表操作
            lock-table-allow: true
  # 国际化信息配置
  messages:
    #指定message的basename，多个以逗号分隔，如果不加包名的话，默认从classpath路径开始，默认: messages
    basename: i18n/*/messages,i18n/messages
    #设定Message bundles的编码，默认: UTF-8
    encoding: UTF-8
  # Redis相关配置
  redis:
    # Redis服务器地址  
    host: 139.199.9.193
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空） 
    password: redis
    # 基于Lettuce客户端的Redis连接池配置
    lettuce:
      pool:
        # 连接池最大连接数（使用负值表示没有限制） 
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）  
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接 
        min-idle: 0
    # 连接超时时间（毫秒）  
    timeout: 50000
  # 会话配置（交个Shiro管理，此处不再指定）：
  session:
    store-type: none
  # 权限控制
  security:
    # 默认路径拦截规则定义
    filter-chain-definition-map:
      '[/]': anon
      '[/**/favicon.ico]': anon
      '[/webjars/**]': anon
      '[/assets/**]': anon
      '[/error*]': anon
      '[/logo/**]': anon
      '[/swagger-ui.html**]': anon
      '[/swagger-resources/**]': anon
      '[/doc.html]': anon
      '[/bycdao-ui/**]': anon
      '[/v2/**]': anon
      '[/kaptcha*]': anon
      '[/actuator*]': anon
      '[/actuator/**]': anon
      '[/druid/*]': ipaddr[192.168.1.0/24]
      '[/monitoring]': roles[admin]
      '[/monitoring2]': roles[1,admin]
      '[/monitoring3]': perms[1,admin]
      '[/monitoring4]': perms[1]
    stateless: true
    jwt:
      enabled: true
      authz:
        enabled: true
        allow-session-creation: false
        continue-chain-before-successful-authentication: true
        path-pattern: /**

  ################################################################################################################
  ###Flyway (FlywayMigrationProperties) 数据库迁移脚本版本管理（实现软件版本升级数据库自动升级）配置：
  ################################################################################################################
  flyway:
    enabled: false
    locations:
      - classpath:db/migration/{vendor}
    #指定SQL起始版本信息
    baseline-on-migrate: true
    baseline-version: 1.0.0
    baseline-description: 业务框架、权限管理、日志管理初始化
    #如果已经有版本1和3，当发现新的版本2时，如果此参数为true,将会把版本2作为当前版本
    out-of-order: false
    #在进行版本升级前是否进行SQL版本信息校验
    validate-on-migrate: false
    #设置如果验证失败是否删除表结构
    clean-on-validation-error: false
    #禁止对数据库进行相关清除操作
    clean-disabled: true
    #target: 1.0.0.17
    placeholder-prefix: '$${'

################################################################################################################
###mybatis-plus (MybatisPlusProperties) 基本配置：
###http://mp.baomidou.com/#/spring-boot
################################################################################################################
mybatis-plus:
  # 初始配置文件
  check-config-location: true
  # config-location: classpath:/conf/mybatis/sqlMapConfig.xml
  #configuration-properties:
  # 初始配置参数 : https://my.oschina.net/tobeexpertismydream/blog/2983483
  configuration:
    # MyBatis 自动映射策略，通过该配置可指定 MyBatis 是否并且如何来自动映射数据表字段与对象的属性，总共有 3 种可选值：
    # AutoMappingBehavior.NONE：不启用自动映射
    # AutoMappingBehavior.PARTIAL：只对非嵌套的 resultMap 进行自动映射
    # AutoMappingBehavior.FULL：对所有的 resultMap 都进行自动映射（任意复杂的结果，嵌套的或其他情况）
    # 有效值：NONE,PARTIAL,FULL,默认值：PARTIAL
    auto-mapping-behavior: partial
    # MyBatis 自动映射时未知列或未知属性处理策略，通过该配置可指定 MyBatis 在自动映射过程中遇到未知列或者未知属性时如何处理，总共有 3 种可选值：
    # 默认情况下没有任何提示，这在测试的时候很不方便，不容易找到错误
    # AutoMappingUnknownColumnBehavior.NONE：不做任何处理 (默认值)
    # AutoMappingUnknownColumnBehavior.WARNING：以日志的形式打印相关警告信息
    # AutoMappingUnknownColumnBehavior.FAILING：当作映射失败处理，并抛出异常和详细信息
    auto-mapping-unknown-column-behavior: none
    # 当启用时，使用延迟加载属性的对象在发起任何延迟属性的调用时会被完全加载。
    # 否则，每个属性都按需加载。需要和 lazyLoadingEnabled 一起使用。默认值：true
    aggressive-lazy-loading: true
    # 全局二级缓存开关：默认是true，如果它配成false，其余各个Mapper XML文件配成支持cache也没用
    cache-enabled: true
    # 指定当结果集中值为 null 的时候是否调用映射对象的 Setter（Map 对象时为 put）方法，通常运用于有 Map.keySet() 依赖或 null 值初始化的情况。
    # 通俗的讲，即 MyBatis 在使用 resultMap 来映射查询结果中的列，如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段，这就导致在调用到该字段的时候由于没有映射，取不到而报空指针异常。
    # 当您遇到类似的情况，请针对该属性进行相关配置以解决以上问题。
    # 注意：基本类型（int、boolean 等）是不能设置成 null 的。
    call-setters-on-nulls: false
    # database-id:
    # default-fetch-size:
    # 设置超时时间，它决定驱动等待一个数据库响应的时间。有效值：Any，positive，integer ；默认值：Not Set(null)
    default-statement-timeout: 60
    # 配置默认的执行器。SIMPLE 执行器没有什么特别之处。REUSE执行器重用预处理语句。BATCH 执行器重用语句和批量更新
    # 有效值：SIMPLE,REUSE,BATCH;默认值：SIMPLE
    default-executor-type: reuse
    jdbc-type-for-null: null
    # 是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN（下划线命名） 到经典 Java 属性名 aColumn（驼峰命名） 的类似映射。
    map-underscore-to-camel-case: false
    # 允许或不允许多种结果集从一个单独的语句中返回（需要适合的驱动）;有效值：true,false;默认值：true
    multiple-result-sets-enabled: true
    #use-actual-param-name:
    # 使用列标签代替列名。不同的驱动在这方便表现不同。参考驱动文档或充分测试两种方法来决定所使用的驱动。有效值：true,false;默认值：true
    use-column-label: true
    # 允许JDBC支持生成的键。需要适合的驱动。如果设置为true则这个设置强制生成的键被使用，尽管一些驱动拒绝兼容但仍然有效（比如 Derby）;有效值：true,false;默认值：false
    use-generated-keys: false
    safe-row-bounds-enabled: false
    safe-result-handler-enabled: true
    # 全局地禁用或启用延迟加载。禁用时，所有关联查询会被马上加载;默认值：true
    lazy-loading-enabled: true
    lazy-load-trigger-methods:
      equals
      clone
      hashCode
      toString
    local-cache-scope: session
    log-prefix: "[Mybatis]"
    #log-impl: org.apache.ibatis.logging.log4j2.Log4j2LoggerImpl.class
  # https://my.oschina.net/tobeexpertismydream/blog/2983620
  global-config:
    db-config:
      id-type: auto
      field-strategy: not-empty
      #mp2.3+ 全局表前缀 mp_
      #table-prefix: mp_
      #是否自动刷新 Mapper 对应的 XML 文件，默认不自动刷新。如果配置了该属性，Mapper 对应的 XML 文件会自动刷新，更改 XML 文件后，无需再次重启工程，由此节省大量时间。
      #refresh-mapper: true
      #是否开启数据库大写命名，默认不开启
      #capital-mode: true
      # Sequence序列接口实现类配置
      #key-generator: com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
      #逻辑删除配置（下面3个配置）
      logic-delete-value: 1
      logic-not-delete-value: 0
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  # Oracle数据库对应的Mybatis脚本
  mapper-locations: classpath*:com/knowway/**/dao/**/sqlmap/oracle/*.xml
  # MySQL数据库对应的Mybatis脚本
  #mapper-locations: classpath*:com/knowway/**/dao/**/sqlmap/mysql/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  type-aliases-package: net.jeebiz.**.dao.entities


###j2cache (J2CacheConfig) 基本配置：
###http://mp.baomidou.com/#/spring-boot
################################################################################################################
j2cache:
  config-location: /j2cache.properties
  open-spring-cache: true
  redis-client: lettuce

################################################################################################################  
### Filestore存储服务（FastDFS、MinIO） 基本配置：  
################################################################################################################
# FastDFS
fdfs:
  enabled: true
  endpoint: http://180.76.120.252:8089
  secret-key: 6fGkkBwRnaDjfXdh
  expire: 200
  pool:
    #从池中借出的对象的最大数目（配置为-1表示不限制）
    max-total: -1
    #获取连接时的最大等待毫秒数(默认配置为5秒)
    max-wait-millis: 10000
    #每个key最大连接数
    max-total-per-key: 50
    #每个key对应的连接池最大空闲连接数
    max-idle-per-key: 10
    #每个key对应的连接池最小空闲连接数
    max_idle_per_key: 5  
  thumb-image:             #缩略图生成参数
    width: 150
    height: 150  
  tracker-list:
  - 180.76.120.252:22122
# MinIO
minio:
  enabled: false
  endpoint: http://192.168.2.201:9000
  access-key: C63M14XR2KF9UHNBR1OE
  secret-key: dT7ld4M+QD2sGCXw+CgcFCo5t3U4iSgiTm+3eIuA
# 存储类型配置
file:
  # 指定存储配置
  storage: fdfs

################################################################################################################  
###logging (log4j2) 基本配置：  
###http://www.cnblogs.com/yhtboke/p/Mybatis.html
################################################################################################################
logging:
  config: classpath:conf/log4j2.xml
  log4j: 
    jdbc:
      enabled: true
      appenders: 
      - table-name: SYS_EXTRAS_LOG_AUTHZ
        marker: Authz-Log
        column-mappings: 
        - column: LOG_USERID
          pattern: "%X{userId}"
        - column: LOG_OPT
          pattern: "%X{opt}"
        - column: LOG_PROTOCOL
          pattern: "%X{protocol}"
        - column: LOG_LEVEL
          pattern: "%level"
        - column: LOG_ADDR
          pattern: "%X{remoteAddr}"
        - column: LOG_LOCATION
          pattern: "%X{location}"
        - column: LOG_STATUS
          pattern: "%X{status}"
        - column: LOG_MSG
          pattern: "%msg"
        - column: LOG_EXCP
          pattern: "%xEx"
        - column: TIME24
          pattern: "%d{yyyy-MM-dd HH:mm:ss.SSS}"
      - table-name: SYS_EXTRAS_LOG_BIZ
        marker: Biz-Log
        column-mappings: 
        - column: LOG_MODULE
          pattern: "%X{module}"
        - column: LOG_BIZ
          pattern: "%X{biz}"
        - column: LOG_OPT
          pattern: "%X{opt}"
        - column: LOG_LEVEL
          pattern: "%level"
        - column: LOG_USERID
          pattern: "%X{userId}"
        - column: LOG_ADDR
          pattern: "%X{remoteAddr}"
        - column: LOG_LOCATION
          pattern: "%X{location}"          
        - column: LOG_MSG
          pattern: "%msg"
        - column: LOG_EXCP
          pattern: "%xEx"
        - column: TIME24
          pattern: "%d{yyyy-MM-dd HH:mm:ss.SSS}"